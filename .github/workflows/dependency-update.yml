name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  # Update Node.js dependencies
  update-npm-dependencies:
    name: Update NPM Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Update dependencies
      run: |
        npm update
        npm audit fix --audit-level=moderate || true
        
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet package-lock.json; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Pull Request
      if: steps.changes.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update npm dependencies'
        title: '🔄 Update NPM Dependencies'
        body: |
          ## Automated Dependency Update
          
          This PR updates NPM dependencies to their latest compatible versions.
          
          ### Changes
          - Updated package-lock.json with latest compatible versions
          - Applied security fixes where available
          
          ### Testing
          - [ ] Frontend builds successfully
          - [ ] All tests pass
          - [ ] No breaking changes detected
          
          **Note**: This is an automated PR. Please review changes carefully before merging.
        branch: chore/update-npm-dependencies
        delete-branch: true

  # Update Python dependencies
  update-python-dependencies:
    name: Update Python Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install pip-tools
      run: pip install pip-tools
      
    - name: Update requirements
      run: |
        cd api
        # Create requirements.in if it doesn't exist
        if [ ! -f requirements.in ]; then
          cp requirements.txt requirements.in
        fi
        
        # Update dependencies
        pip-compile --upgrade requirements.in
        
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet api/requirements.txt; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Test updated dependencies
      if: steps.changes.outputs.changed == 'true'
      run: |
        cd api
        pip install -r requirements.txt
        python -c "import main; print('Dependencies installed successfully')"
        
    - name: Create Pull Request
      if: steps.changes.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update python dependencies'
        title: '🐍 Update Python Dependencies'
        body: |
          ## Automated Python Dependency Update
          
          This PR updates Python dependencies to their latest compatible versions.
          
          ### Changes
          - Updated requirements.txt with latest compatible versions
          - Verified all dependencies install correctly
          
          ### Testing
          - [ ] Backend starts successfully
          - [ ] All API endpoints work
          - [ ] No breaking changes detected
          
          **Note**: This is an automated PR. Please review changes carefully before merging.
        branch: chore/update-python-dependencies
        delete-branch: true

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: |
        npm audit --audit-level=high --json > npm-audit.json || true
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install Python dependencies and audit
      run: |
        cd api
        pip install -r requirements.txt
        pip install safety
        safety check --json > ../python-audit.json || true
        
    - name: Create security report
      run: |
        echo "# Security Audit Report" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        
        echo "## NPM Audit Results" >> security-report.md
        if [ -s npm-audit.json ]; then
          echo "Found vulnerabilities in NPM dependencies." >> security-report.md
          echo "\`\`\`json" >> security-report.md
          cat npm-audit.json >> security-report.md
          echo "\`\`\`" >> security-report.md
        else
          echo "✅ No high-severity vulnerabilities found in NPM dependencies." >> security-report.md
        fi
        
        echo "" >> security-report.md
        echo "## Python Safety Check Results" >> security-report.md
        if [ -s python-audit.json ]; then
          echo "Found vulnerabilities in Python dependencies." >> security-report.md
          echo "\`\`\`json" >> security-report.md
          cat python-audit.json >> security-report.md
          echo "\`\`\`" >> security-report.md
        else
          echo "✅ No vulnerabilities found in Python dependencies." >> security-report.md
        fi
        
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-report
        path: security-report.md
        retention-days: 30
        
    - name: Create issue for vulnerabilities
      if: github.event_name == 'schedule'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Check if there are any vulnerabilities
          const npmAudit = fs.existsSync('npm-audit.json') && fs.statSync('npm-audit.json').size > 0;
          const pythonAudit = fs.existsSync('python-audit.json') && fs.statSync('python-audit.json').size > 0;
          
          if (npmAudit || pythonAudit) {
            const report = fs.readFileSync('security-report.md', 'utf8');
            
            // Check if issue already exists
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['security', 'dependencies'],
              state: 'open'
            });
            
            const existingIssue = issues.find(issue => 
              issue.title.includes('Security Vulnerabilities Detected')
            );
            
            if (existingIssue) {
              // Update existing issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: `## Updated Security Audit Report\n\n${report}`
              });
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '🚨 Security Vulnerabilities Detected',
                body: `## Security Audit Report\n\n${report}\n\n---\n\n**Action Required**: Please review and address these security vulnerabilities.`,
                labels: ['security', 'dependencies', 'high-priority']
              });
            }
          }
